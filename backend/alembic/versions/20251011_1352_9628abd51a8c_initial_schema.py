"""initial_schema

Revision ID: 9628abd51a8c
Revises: 
Create Date: 2025-10-11 13:52:28.569346

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '9628abd51a8c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('movies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('kobis_code', sa.String(length=50), nullable=True),
    sa.Column('tmdb_id', sa.Integer(), nullable=True),
    sa.Column('kmdb_id', sa.String(length=50), nullable=True),
    sa.Column('title_ko', sa.String(length=255), nullable=False),
    sa.Column('title_en', sa.String(length=255), nullable=True),
    sa.Column('title_original', sa.String(length=255), nullable=True),
    sa.Column('release_date', sa.Date(), nullable=True),
    sa.Column('production_year', sa.Integer(), nullable=True),
    sa.Column('runtime', sa.Integer(), nullable=True),
    sa.Column('genre', sa.String(length=255), nullable=True),
    sa.Column('nation', sa.String(length=100), nullable=True),
    sa.Column('rating', sa.String(length=50), nullable=True),
    sa.Column('movie_type', sa.String(length=20), nullable=True),
    sa.Column('director', sa.String(length=255), nullable=True),
    sa.Column('actors', sa.Text(), nullable=True),
    sa.Column('poster_url', sa.Text(), nullable=True),
    sa.Column('backdrop_url', sa.Text(), nullable=True),
    sa.Column('synopsis', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_movies_id'), 'movies', ['id'], unique=False)
    op.create_index(op.f('ix_movies_kobis_code'), 'movies', ['kobis_code'], unique=True)
    op.create_index(op.f('ix_movies_release_date'), 'movies', ['release_date'], unique=False)
    op.create_index(op.f('ix_movies_title_ko'), 'movies', ['title_ko'], unique=False)
    op.create_index(op.f('ix_movies_tmdb_id'), 'movies', ['tmdb_id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('yearly_goal', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_auto', sa.Boolean(), nullable=True),
    sa.Column('auto_rule', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_collections_id'), 'collections', ['id'], unique=False)
    op.create_index(op.f('ix_collections_is_auto'), 'collections', ['is_auto'], unique=False)
    op.create_index(op.f('ix_collections_user_id'), 'collections', ['user_id'], unique=False)
    op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('is_predefined', sa.Boolean(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'user_id', name='uq_tag_name_user')
    )
    op.create_index(op.f('ix_tags_id'), 'tags', ['id'], unique=False)
    op.create_index(op.f('ix_tags_is_predefined'), 'tags', ['is_predefined'], unique=False)
    op.create_index(op.f('ix_tags_name'), 'tags', ['name'], unique=False)
    op.create_index(op.f('ix_tags_user_id'), 'tags', ['user_id'], unique=False)
    op.create_table('user_movies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('movie_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('watch_date', sa.Date(), nullable=True),
    sa.Column('rating', sa.DECIMAL(precision=2, scale=1), nullable=True),
    sa.Column('one_line_review', sa.Text(), nullable=True),
    sa.Column('watch_location', sa.String(length=255), nullable=True),
    sa.Column('watch_method', sa.String(length=50), nullable=True),
    sa.Column('watched_with', sa.String(length=255), nullable=True),
    sa.Column('is_best_movie', sa.Boolean(), nullable=True),
    sa.Column('detailed_review', sa.Text(), nullable=True),
    sa.Column('progress', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.CheckConstraint('rating >= 0 AND rating <= 5', name='ck_rating_range'),
    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'movie_id', name='uq_user_movie')
    )
    op.create_index(op.f('ix_user_movies_created_at'), 'user_movies', ['created_at'], unique=False)
    op.create_index(op.f('ix_user_movies_id'), 'user_movies', ['id'], unique=False)
    op.create_index(op.f('ix_user_movies_is_best_movie'), 'user_movies', ['is_best_movie'], unique=False)
    op.create_index(op.f('ix_user_movies_status'), 'user_movies', ['status'], unique=False)
    op.create_index(op.f('ix_user_movies_user_id'), 'user_movies', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_movies_watch_date'), 'user_movies', ['watch_date'], unique=False)
    op.create_table('collection_movies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.Integer(), nullable=False),
    sa.Column('user_movie_id', sa.Integer(), nullable=False),
    sa.Column('sort_order', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['collection_id'], ['collections.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_movie_id'], ['user_movies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('collection_id', 'user_movie_id', name='uq_collection_user_movie')
    )
    op.create_index(op.f('ix_collection_movies_collection_id'), 'collection_movies', ['collection_id'], unique=False)
    op.create_index(op.f('ix_collection_movies_id'), 'collection_movies', ['id'], unique=False)
    op.create_index(op.f('ix_collection_movies_user_movie_id'), 'collection_movies', ['user_movie_id'], unique=False)
    op.create_table('movie_tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_movie_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_movie_id'], ['user_movies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_movie_id', 'tag_id', name='uq_user_movie_tag')
    )
    op.create_index(op.f('ix_movie_tags_id'), 'movie_tags', ['id'], unique=False)
    op.create_index(op.f('ix_movie_tags_tag_id'), 'movie_tags', ['tag_id'], unique=False)
    op.create_index(op.f('ix_movie_tags_user_movie_id'), 'movie_tags', ['user_movie_id'], unique=False)
    op.create_table('user_images',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('user_movie_id', sa.Integer(), nullable=False),
    sa.Column('image_type', sa.String(length=20), nullable=False),
    sa.Column('image_url', sa.Text(), nullable=False),
    sa.Column('thumbnail_url', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_movie_id'], ['user_movies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_images_id'), 'user_images', ['id'], unique=False)
    op.create_index(op.f('ix_user_images_user_id'), 'user_images', ['user_id'], unique=False)
    op.create_index(op.f('ix_user_images_user_movie_id'), 'user_images', ['user_movie_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_images_user_movie_id'), table_name='user_images')
    op.drop_index(op.f('ix_user_images_user_id'), table_name='user_images')
    op.drop_index(op.f('ix_user_images_id'), table_name='user_images')
    op.drop_table('user_images')
    op.drop_index(op.f('ix_movie_tags_user_movie_id'), table_name='movie_tags')
    op.drop_index(op.f('ix_movie_tags_tag_id'), table_name='movie_tags')
    op.drop_index(op.f('ix_movie_tags_id'), table_name='movie_tags')
    op.drop_table('movie_tags')
    op.drop_index(op.f('ix_collection_movies_user_movie_id'), table_name='collection_movies')
    op.drop_index(op.f('ix_collection_movies_id'), table_name='collection_movies')
    op.drop_index(op.f('ix_collection_movies_collection_id'), table_name='collection_movies')
    op.drop_table('collection_movies')
    op.drop_index(op.f('ix_user_movies_watch_date'), table_name='user_movies')
    op.drop_index(op.f('ix_user_movies_user_id'), table_name='user_movies')
    op.drop_index(op.f('ix_user_movies_status'), table_name='user_movies')
    op.drop_index(op.f('ix_user_movies_is_best_movie'), table_name='user_movies')
    op.drop_index(op.f('ix_user_movies_id'), table_name='user_movies')
    op.drop_index(op.f('ix_user_movies_created_at'), table_name='user_movies')
    op.drop_table('user_movies')
    op.drop_index(op.f('ix_tags_user_id'), table_name='tags')
    op.drop_index(op.f('ix_tags_name'), table_name='tags')
    op.drop_index(op.f('ix_tags_is_predefined'), table_name='tags')
    op.drop_index(op.f('ix_tags_id'), table_name='tags')
    op.drop_table('tags')
    op.drop_index(op.f('ix_collections_user_id'), table_name='collections')
    op.drop_index(op.f('ix_collections_is_auto'), table_name='collections')
    op.drop_index(op.f('ix_collections_id'), table_name='collections')
    op.drop_table('collections')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_movies_tmdb_id'), table_name='movies')
    op.drop_index(op.f('ix_movies_title_ko'), table_name='movies')
    op.drop_index(op.f('ix_movies_release_date'), table_name='movies')
    op.drop_index(op.f('ix_movies_kobis_code'), table_name='movies')
    op.drop_index(op.f('ix_movies_id'), table_name='movies')
    op.drop_table('movies')
    # ### end Alembic commands ###
